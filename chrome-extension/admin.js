import{c as k,j as e,r as a}from"./client.js";import{g,c,m as l,r as y}from"./apiService.js";const R=()=>{const[d,m]=a.useState([]),[r,n]=a.useState({username:"",password:"",role:"User"}),[h,p]=a.useState(""),[N,A]=a.useState("");a.useEffect(()=>{console.log("Start"),o()},[]),a.useEffect(()=>{(async()=>{try{if((await c()).status!==200){if(!(await fetch("https://localhost:5001/api/auth/refresh-token",{method:"POST",credentials:"include"})).ok)throw new Error("Refresh failed");if((await c()).status!==200)throw new Error("Still not authenticated after refresh")}if((await l()).data.role!="0")throw new Error("Access denied");o()}catch(t){console.error("Authentication check failed:",t)}})()},[]);const u=async()=>{try{if((await c()).status===200){const t=await l();return}}catch{console.log("Check failed");try{if((await y()).status===200){const i=await c();if(console.log("recheckResponse.status: ",i.status),i.status===200){const j=await l();return}}}catch(t){console.log("Refresh token failed:",t)}}},o=async()=>{try{const s=await g("/admin/users");m(s.data)}catch(s){console.error("Failed to fetch users",s)}},f=async()=>{const s=await fetch("https://localhost:5001/api/admin/users/register",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify(r)});s.ok?(n({username:"",password:"",role:"User"}),o()):(u(),p(await s.text()))},w=async s=>{window.confirm("Вы уверены, что хотите удалить пользователя?")&&(await fetch(`https://localhost:5001/api/admin/users/${s}`,{method:"DELETE",headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}}),o())},x=async s=>{{var t={username:"",newPAssword:""};await fetch(`https://localhost:5001/api/admin/users/${s}`,{method:"PUT",headers:{Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify(t)}),o()}};return e.jsxs("div",{className:"admin-container",children:[e.jsx("h1",{children:"User Management"}),e.jsxs("div",{className:"create-user-form",children:[e.jsx("h2",{className:"ms-1 me-1",children:"Create New User"}),e.jsxs("div",{className:"user-form-container",children:[e.jsx("input",{className:"form-control ms-1 me-1",type:"text",placeholder:"Username",value:r.username,onChange:s=>n({...r,username:s.target.value})}),e.jsx("input",{className:"form-control ms-1 me-1",type:"password",placeholder:"Password",value:r.password,onChange:s=>n({...r,password:s.target.value})}),e.jsxs("select",{className:"form-select ms-1 me-1",value:r.role,onChange:s=>n({...r,role:s.target.value}),children:[e.jsx("option",{value:"User",children:"User"}),e.jsx("option",{value:"Admin",children:"Admin"})]})]}),e.jsx("button",{className:"btn btn-primary ms-1 me-1 mt-1",onClick:f,children:"Create User"})]}),h&&e.jsx("div",{className:"error",children:h}),e.jsxs("table",{className:"table m-3",children:[e.jsx("thead",{className:"thead-light",children:e.jsxs("tr",{children:[e.jsx("th",{scope:"col",children:"ID"}),e.jsx("th",{scope:"col",children:"Username"}),e.jsx("th",{scope:"col",children:"Role"}),e.jsx("th",{scope:"col",children:"Actions"})]})}),e.jsx("tbody",{children:d.map(s=>e.jsxs("tr",{children:[e.jsx("td",{width:"10px",children:s.id}),e.jsx("td",{width:"30%",children:s.username}),e.jsx("td",{width:"20%",children:s.role=="0"?"Admin":"User"}),e.jsxs("td",{width:"40%",children:[e.jsx("button",{className:"btn btn-primary m-1",onClick:()=>w(s.id),children:"Delete"}),e.jsx("button",{className:"btn btn-primary m-1",onClick:()=>x(s.id),children:"Refresh Password"})]})]},s.id))})]})]})},U=k.createRoot(document.getElementById("root"));U.render(e.jsx(R,{}));
