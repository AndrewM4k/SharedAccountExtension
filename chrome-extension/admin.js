import{c as x,j as e,r as o}from"./client.js";import{a as m,c as d,m as j}from"./apiService.js";const i=m.create({baseURL:"https://localhost:5001/api",withCredentials:!0});i.interceptors.response.use(r=>r,async r=>{const a=r.config;if(r.response.status===401&&!a._retry){a._retry=!0;try{return await m.post("https://localhost:5001/api/auth/refresh-token",{},{withCredentials:!0}),i(a)}catch(t){return console.log("refreshError: ",t),Promise.reject(t)}}return Promise.reject(r)});const w=()=>{const[r,a]=o.useState([]),[t,n]=o.useState({username:"",password:"",role:"User"}),[l,p]=o.useState("");o.useEffect(()=>{console.log("Start"),c()},[]),o.useEffect(()=>{(async()=>{try{if((await d()).status!==200){if(!(await fetch("https://localhost:5001/api/auth/refresh-token",{method:"POST",credentials:"include"})).ok)throw new Error("Refresh failed");if((await d()).status!==200)throw new Error("Still not authenticated after refresh")}if((await j()).data.role!="0")throw new Error("Access denied");c()}catch(h){console.error("Authentication check failed:",h)}})()},[]);const c=async()=>{try{const s=await i.get("/admin/users");a(s.data)}catch(s){console.error("Failed to fetch users",s)}},u=async()=>{const s=await fetch("http://localhost:5000/api/admin/users/register",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify(t)});s.ok?(n({username:"",password:"",role:"User"}),c()):p(await s.text())},f=async s=>{window.confirm("Вы уверены, что хотите удалить пользователя?")&&(await fetch(`http://localhost:5000/api/admin/users/${s}`,{method:"DELETE",headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}}),c())};return e.jsxs("div",{className:"admin-container",children:[e.jsx("h1",{children:"User Management"}),e.jsxs("div",{className:"create-user-form",children:[e.jsx("h2",{className:"ms-1 me-1",children:"Create New User"}),e.jsxs("div",{className:"user-form-container",children:[e.jsx("input",{className:"form-control ms-1 me-1",type:"text",placeholder:"Username",value:t.username,onChange:s=>n({...t,username:s.target.value})}),e.jsx("input",{className:"form-control ms-1 me-1",type:"password",placeholder:"Password",value:t.password,onChange:s=>n({...t,password:s.target.value})}),e.jsxs("select",{className:"form-select ms-1 me-1",value:t.role,onChange:s=>n({...t,role:s.target.value}),children:[e.jsx("option",{value:"User",children:"User"}),e.jsx("option",{value:"Admin",children:"Admin"})]})]}),e.jsx("button",{className:"btn btn-primary ms-1 me-1 mt-1",onClick:u,children:"Create User"})]}),l&&e.jsx("div",{className:"error",children:l}),e.jsxs("table",{className:"table table-striped",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{scope:"col",children:"ID"}),e.jsx("th",{scope:"col",children:"Username"}),e.jsx("th",{scope:"col",children:"Role"}),e.jsx("th",{scope:"col",children:"Actions"})]})}),e.jsx("tbody",{children:r.map(s=>e.jsxs("tr",{children:[e.jsx("td",{children:s.id}),e.jsx("td",{children:s.username}),e.jsx("td",{children:s.role=="0"?"Admin":"User"}),e.jsx("td",{children:e.jsx("button",{className:"btn btn-primary",onClick:()=>f(s.id),children:"Delete"})})]},s.id))})]})]})},g=x.createRoot(document.getElementById("root"));g.render(e.jsx(w,{}));
